// <auto-generated />
using System;
using BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Data.Migrations
{
    [DbContext(typeof(RestoContext))]
    [Migration("20240705111145_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("BackEnd.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("OrderInfoId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BackEnd.Entity.OrderInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OrderInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderName = "Fried Siken"
                        },
                        new
                        {
                            Id = 2,
                            OrderName = "Fried Siomai"
                        },
                        new
                        {
                            Id = 3,
                            OrderName = "Fried Siopao"
                        },
                        new
                        {
                            Id = 4,
                            OrderName = "Fried Siokoy"
                        },
                        new
                        {
                            Id = 5,
                            OrderName = "Fried Okoy"
                        });
                });

            modelBuilder.Entity("BackEnd.Entity.Order", b =>
                {
                    b.HasOne("BackEnd.Entity.OrderInfo", "OrderInfo")
                        .WithMany()
                        .HasForeignKey("OrderInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
